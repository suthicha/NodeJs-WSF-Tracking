{"version":3,"sources":["../../src/controller/user.js"],"names":["jwt","require","squel","db","httpMsg","helper","settings","exports","authenticate","req","resp","body","Error","data","sql","select","from","field","where","Username","Password","toString","executeSql","callback","err","show500","length","user","token","sign","FullName","Fullname","secert","expiresIn","writeHead","write","JSON","stringify","Success","UserType","TaxNo","BranchNo","Company","CompanyName","Token","end","sendAuthFail","ex","add","insert","into","set","StringNull","UPassword","Email","dontQuote","execCommandWithConnection","dbConfig","update","table","TrxNo","delete","getList"],"mappings":"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","file":"user.js","sourcesContent":["var jwt = require('jsonwebtoken');\nvar squel = require('squel');\nvar db = require('../core/db');\nvar httpMsg = require('../core/httpMsg');\nvar helper = require('../core/helper');\nvar settings = require('../settings');\n\nexports.authenticate = function(req, resp) {\n    try{\n        if (!req.body) throw new Error(\"Input not valid\");\n        var data = req.body;\n        \n        if(data){\n\n            var sql = squel.select()\n                    .from(\"SFT_Users\")\n                    .field(\"Username\")\n                    .field(\"Fullname\")\n                    .field(\"UserType\")\n                    .field(\"TaxNo\")\n                    .field(\"BranchNo\")\n                    .field(\"CompanyName\")\n                    .field(\"Email\")\n                    .where(\"Username = ?\", data.Username)\n                    .where(\"UPassword = ?\", data.Password)\n                    .where(\"UserStatus = ?\", \"A\")\n                    .toString();\n            \n            db.executeSql(sql, function(callback, err) { \n                if (err){\n                    httpMsg.show500(req, resp, err);\n                }else {\n                    if (data && callback.length > 0){\n                        var user = callback[0];\n                        if (user.Username === req.body.Username)\n                        {\n                            var token = jwt.sign({ \n                                Username: user.Username, \n                                FullName: user.Fullname\n                                }, settings.secert, {\n                                expiresIn: 86400 // expires in 24 hours\n                            });\n                        \n                            resp.writeHead(200, {\"Content-Type\":\"application/json\"});                        \n                            resp.write(JSON.stringify({\n                                Success: true, \n                                Fullname: user.Fullname, \n                                UserType: user.UserType,\n                                TaxNo: user.TaxNo,\n                                BranchNo: user.BranchNo,\n                                Company: user.CompanyName,\n                                Token: token}));\n                            resp.end();\n\n                        }else{\n                            httpMsg.sendAuthFail(req, resp, \"Username not match.\");\n                        }\n                    }\n                    else {\n                        httpMsg.sendAuthFail(req, resp, \"Find not found Username: \" + data.Username + \" or Password incorrect.\");\n                    }\n                }\n            });\n        }\n        else {\n            throw new Error(\"Input not valid\");\n        }\n\n    }catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n};\n\nexports.add = function(req, resp){\n    try{\n      if (!req.body) throw new Error(\"Input not valid\");\n      var data = req.body;\n      \n      if (data){\n\n          var sql = squel.insert()\n                .into(\"SFT_Users\")\n                .set(\"Username\", helper.StringNull(data.Username))\n                .set(\"UPassword\", helper.StringNull(data.UPassword))\n                .set(\"FullName\", helper.StringNull(data.Fullname))\n                .set(\"Email\", helper.StringNull(data.Email))\n                .set(\"UserType\", helper.StringNull(data.UserType))\n                .set(\"TaxNo\", helper.StringNull(data.TaxNo))\n                .set(\"BranchNo\",helper.StringNull(data.BranchNo))\n                .set(\"CompanyName\", helper.StringNull(data.CompanyName))\n                .set(\"RegisterDate\", \"GETDATE()\", { dontQuote: true })\n                .set(\"ExpiredDate\", \"DATEADD(year,10,GETDATE())\", { dontQuote: true })\n                .set(\"UserStatus\", \"A\")\n                .toString();\n          helper.execCommandWithConnection(req, resp, sql, settings.dbConfig);\n      }\n      else {\n        throw new Error(\"Input not valid\");\n      }\n\n    }\n    catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n}\n\nexports.update = function(req, resp){\n    try{\n      if (!req.body) throw new Error(\"Input not valid\");\n      var data = req.body;\n      \n      if (data){\n\n          var sql = squel.update()\n                .table(\"SFT_Users\")\n                .set(\"UPassword\", helper.StringNull(data.UPassword))\n                .set(\"FullName\", helper.StringNull(data.Fullname))\n                .set(\"Email\", helper.StringNull(data.Email))\n                .set(\"UserType\", helper.StringNull(data.UserType))\n                .set(\"TaxNo\", helper.StringNull(data.TaxNo))\n                .set(\"BranchNo\",helper.StringNull(data.BranchNo))\n                .set(\"CompanyName\", helper.StringNull(data.CompanyName))\n                .where(\"TrxNo = ?\", data.TrxNo)\n                .toString();\n          helper.execCommandWithConnection(req, resp, sql, settings.dbConfig);\n      }\n    }\n    catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n}\n\nexports.delete = function(req, resp){\n    try{\n      if (!req.body) throw new Error(\"Input not valid\");\n      var data = req.body;\n      \n      if (data){\n\n          var sql = squel.update()\n                .table(\"SFT_Users\")\n                .set(\"UserStatus\", \"I\")\n                .where(\"TrxNo = ?\", data.TrxNo)\n                .toString();\n          helper.execCommandWithConnection(req, resp, sql, settings.dbConfig);\n      }\n    }\n    catch (ex) {\n        httpMsg.show500(req, resp, ex);\n    }\n}\n\nexports.getList = function(req, resp){\n    \n    var sql = squel.select()\n        .from(\"SFT_Users\")\n        .field(\"Username\")\n        .field(\"Fullname\")\n        .field(\"UserType\")\n        .field(\"TaxNo\")\n        .field(\"BranchNo\")\n        .field(\"CompanyName\")\n        .field(\"Email\")\n        .field(\"RegisterDate\")\n        .field(\"ExpiredDate\")\n        .field(\"TrxNo\")\n        .where(\"UserStatus = ?\", \"A\")\n        .toString();\n    helper.execCommandWithConnection(req, resp, sql, settings.dbConfig);\n}\n\n\n"]}